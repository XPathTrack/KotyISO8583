package UI;

import iso8583.data_class.IsoData;
import iso8583.formatters.HexFormatter;
import tcp.data.Client;

import javax.swing.*;
import java.awt.*;

/**
 * @author PathTrack
 */
public class CommunicationDialog extends javax.swing.JDialog {

    private final Client client;

    /**
     * Creates new form CommunicationDialog
     *
     * @param parent
     * @param modal
     * @param client client socket
     */
    public CommunicationDialog(java.awt.Frame parent, boolean modal, Client client) {
        super(parent, modal);
        this.client = client;
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        GridLayout gridLayout = new GridLayout(2, 1); // Dividirá el contenedor en 2 partes iguales verticalmente.
        getContentPane().setLayout(gridLayout);
        IsoData isoData = client.getTalkLog().get(client.getTalkLog().size() - 1);
        JTextArea textArea = new JTextArea();
        textArea.setEditable(false);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        textArea.setText("Raw data in hex: " + HexFormatter.toHexString(isoData.getRawData()) + "\nDecoded data -> {\n" + isoData + "\n}");
        JScrollPane scrollPane = new JScrollPane(textArea);

        getContentPane().add(scrollPane); // Añade el JScrollPane que contiene el JTextArea

        pack(); // Ajusta el tamaño del JFrame basado en los componentes internos
        setSize(800, 700); // Establece el tamaño del JFrame después de pack() para forzar el tamaño deseado.
        setResizable(false); // Hace que el JFrame no sea redimensionable.
        setLocationRelativeTo(null); // Centra el JFrame en pantalla.
    }
}